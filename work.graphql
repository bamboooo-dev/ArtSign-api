# Maps a Time GraphQL scalar to a Go time.Time struct.
scalar Time

# Define an enumeration type and map it later to Ent enum (Go type).
# https://graphql.org/learn/schema/#enumeration-types
enum Status {
  IN_PROGRESS
  COMPLETED
}

# Define an object type and map it later to the generated Ent model.
# https://graphql.org/learn/schema/#object-types-and-fields
type Work {
  id: ID!
  createdAt: Time
  status: Status!
  priority: Int!
  text: String!
  parent: Work
  children: [Work!]
}

# Define an input type for the mutation below.
# https://graphql.org/learn/schema/#input-types
input WorkInput {
  status: Status! = IN_PROGRESS
  priority: Int
  text: String!
  parent: ID
}

# Define a mutation for creating works.
# https://graphql.org/learn/queries/#mutations
type Mutation {
  createWork(work: WorkInput!): Work!
}

# Define a query for getting all works.
type Query {
  works: [Work!]
}
