// Code generated by entc, DO NOT EDIT.

package ent

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
)

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (w *WorkQuery) CollectFields(ctx context.Context, satisfies ...string) *WorkQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		w = w.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return w
}

func (w *WorkQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *WorkQuery {
	for _, field := range graphql.CollectFields(ctx, field.Selections, satisfies) {
		switch field.Name {
		case "children":
			w = w.WithChildren(func(query *WorkQuery) {
				query.collectField(ctx, field)
			})
		case "parent":
			w = w.WithParent(func(query *WorkQuery) {
				query.collectField(ctx, field)
			})
		}
	}
	return w
}
